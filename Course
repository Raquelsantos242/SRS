package srs;

/**
 *
 * @author raquel.santos
 */

import java.util.ArrayList;
import java.util.Collection;

public class Course {
    
    private String courseNo;
    private String courseName;
    private double credits;
    private ArrayList<Section> offeredAsSection;
    private ArrayList<Course> prerequisites;
    
    public Course(String cNo, String cName, double credits){
        setCourseNo(cNo);
        setCourseName(cName);
        setCredits(credits);
        
        
        offeredAsSection = new ArrayList<Section>();
        prerequisites = new ArrayList<Course>();
    }
  

    public String getCourseNo() {
        return courseNo;
    }

    public void setCourseNo(String courseNo) {
        courseNo = courseNo;
    }

    public String getCourseName() {
        return courseName;
    }

    public void setCourseName(String cName) {
        courseName = cName;
    }

    public double getCredits() {
        return credits;
    }

    public void setCredits(double c) {
        credits = c;
    }

    public void display(){
        System.out.println("Course information:");
        System.out.println("\tCourse No.: " + getCourseNo());
        System.out.println("\tCourse Name: " + getCourseName());
        System.out.println("\tCredits: " + getCredits());
        System.out.println("\tPrerequisite Courses: ");
        
        for ( Course c : prerequisites){
            System.out.println("\t\t" + c.toString());
        }
        System.out.println("\tOffered As Section(s): ");
        for ( Section s: offeredAsSection){
            System.out.println(s.getSectionNo() + " ");
            
        }
        System.out.println();
    }
    public String toString(){
        return getCourseNo() + ": " + getCourseName();
    }
    public void addPrerequisite(Course c){
        prerequisites.add(c);
    }
    public boolean hasPrerequisites(){
        if (prerequisites.size() > 0) return true;
        else return false;
    }
    public Collection<Course> getPrerequisites(){
        return prerequisites;
    }
    public Section scheduleSection(char day, String time, String room, int capacity){
        Section s = new Section (offeredAsSection.size() + 1, day, time, this, room, capacity);
        
        addSection(s);
        return s;
        
    }
    public void addSection(Section s){
        offeredAsSection.add(s);
        
    }
        
    }
